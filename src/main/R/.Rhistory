getwd()
dat <- fread("../resources/day4input.txt")
library(testthat)
library(data.table)
dat <- fread("../resources/day4input.txt")
datz
dat
dat <- fread("../resources/day4input.txt", header = FALSE)
dat
?fread
dat <- fread("../resources/day4input.txt", header = FALSE, sep = "\n")
dat
dat[,.N]
class(dat)
dat[, .(strsplit())]
?data.table
dat[, lapply(.SD, function(s) {
print(x)
})]
dat[, lapply(.SD, function(x) {
print(x)
})]
dat[, lapply(.SD, function(x) { strsplit(x) })]
dat[, lapply(.SD, function(x) { strsplit(x, split = "+\\w") })]
dat[, lapply(.SD, function(x) { strsplit(x, split = " ") })]
dat[, lapply(.SD, function(x) { strsplit(x, split = "+\\s") })]
dat[, lapply(.SD, function(x) {
lapply(strsplit(x, split = "+\\s"), function(y) {
unique(y)
} )
})]
dat[, lapply(.SD, function(x) {
lapply(strsplit(x, split = "+\\s"), function(y) {
y
#unique(y)
} )
})]
dat[, lapply(.SD, function(x) {
lapply(strsplit(x, split = "+\\s"), function(y) {
print(y)
y
#unique(y)
} )
})]
dat[, lapply(.SD, function(x) {
lapply(strsplit(x, split = "+\\s"), function(y) {
print(summary(as.factor(y)))
y
#unique(y)
} )
})]
library(dplyr)
x <- "aa" "bb" "cc" "dd" "aa"
x <- c("aa" "bb" "cc" "dd" "aa")
x <- c("aa bb cc dd aa")
x
lapply(strsplit(x, split = "+\\s"))
lapply(strsplit(x, split = "+\\s")) %>%
summarise(as.factor(.))
?summarise
lapply(strsplit(x, split = "+\\s")) %>%
summary(as.factor(.))
lapply(strsplit(x, split = "+\\s")) %>%
print(.)
strsplit(x, split = "+\\s")
strsplit(x, split = "+\\s") %>%
unlist()
strsplit(x, split = "+\\s") %>%
unlist() %>%
print(.)
strsplit(x, split = "+\\s") %>%
unlist() %>%
# print(.)
summary(as.factor(.))
strsplit(x, split = "+\\s") %>%
unlist() %>%
# print(.)
summarise_each(as.factor(), .)
strsplit(x, split = "+\\s") %>%
unlist() %>%
# print(.)
summarise_at(as.factor(), .)
strsplit(x, split = "+\\s") %>%
unlist() %>%
# print(.)
summarise_at(as.factor(.))
strsplit(x, split = "+\\s") %>%
unlist() %>%
summarise_at(as.factor(.))
strsplit(x, split = "+\\s") %>%
unlist() %>%
as.factor(.)
strsplit(x, split = "+\\s") %>%
unlist() %>%
summary(as.factor(.))
strsplit(x, split = "+\\s") %>%
unlist() %>%
as.factor() %>%
summary()
strsplit(x, split = "+\\s") %>%
unlist() %>%
as.factor() %>%
summary() %>%
any(. > 1)
strsplit(x, split = "+\\s") %>%
unlist() %>%
as.factor() %>%
summary() %>%
!any(. > 1)
strsplit(x, split = "+\\s") %>%
unlist() %>%
as.factor() %>%
summary() %>%
any(!(. > 1)) %>%
print()
strsplit(x, split = "+\\s") %>%
unlist() %>%
as.factor() %>%
summary() %>%
any(!(. > 1))
x
strsplit(x, split = "+\\s") %>%
unlist() %>%
as.factor() %>%
summary() %>%
all(. == 1)
x <- NULL
## --- Day 4: High-Entropy Passphrases ---
library(testthat)
library(data.table)
library(dplyr)
dat <- fread("../resources/day4input.txt", header = FALSE, sep = "\n")
isValid <- function(x) {
result <- strsplit(x, split = "+\\s") %>%
unlist() %>%
as.factor() %>%
summary() %>%
all(. == 1)
return (result)
}
dat[, lapply(.SD, isValid)]
isValid
x
dat
dat[, lapply(.SD, isValid)]
isValid <- function(x) {
result <- strsplit(x, split = "+\\s") %>%
unlist() %>%
as.factor() %>%
summary() #%>%
#all(. == 1)
return (result)
}
dat[, lapply(.SD, isValid)]
dat
dat[, lapply(.SD, isValid), by = .I]
dat
dat[, print(), by = .I]
dat[, lapply(.SD, print()), by = .I]
dat[, lapply(.SD, function(x) { print(x) }), by = .I]
dat[, lapply(.SD, function(x) { print(x) })]
dat[, lapply(.SD, function(x) { isValid(x) })]
isValid <- function(x) {
print(x)
result <- strsplit(x, split = "+\\s") %>%
unlist() %>%
as.factor() %>%
summary() #%>%
#all(. == 1)
return (result)
}
dat[, lapply(.SD, isValid), by = .I]
dat[, lapply(.SD, function(x) { isValid(x) })]
isValid <- function(x) {
print(x)
print(strsplit(x, split = "+\\s"))
result <- strsplit(x, split = "+\\s") %>%
unlist() %>%
as.factor() %>%
summary() #%>%
#all(. == 1)
return (result)
}
dat[, lapply(.SD, function(x) { isValid(x) })]
isValid <- function(x) {
print(x)
print(xx <- strsplit(x, split = "+\\s"))
print(unlist(xx))
#print(lapply())
result <- strsplit(x, split = "+\\s") %>%
unlist() %>%
as.factor() %>%
summary() #%>%
#all(. == 1)
return (result)
}
dat[, lapply(.SD, isValid), by = .I]
isValid <- function(x) {
print(x)
print(xx <- strsplit(x, split = "+\\s"))
cat("hier\n")
print(unlist(xx))
#print(lapply())
result <- strsplit(x, split = "+\\s") %>%
unlist() %>%
as.factor() %>%
summary() #%>%
#all(. == 1)
return (result)
}
dat[, lapply(.SD, isValid), by = .I]
isValid <- function(x) {
print(x)
print(splitted <- strsplit(x, split = "+\\s"))
result <- lapply(splitted, function(y) {
all(summary(as.factor(y)) == 1)
})
#cat("hier\n")
#print(unlist(xx))
#print(lapply())
# result <- strsplit(x, split = "+\\s") %>%
# unlist() %>%
# as.factor() %>%
# summary() #%>%
#all(. == 1)
return (result)
}
dat[, lapply(.SD, isValid), by = .I]
isValid <- function(x) {
print(x)
print(splitted <- strsplit(x, split = "+\\s"))
result <- lapply(splitted, function(y) {
all(summary(as.factor(y)) == 1)
})
#cat("hier\n")
#print(unlist(xx))
#print(lapply())
# result <- strsplit(x, split = "+\\s") %>%
# unlist() %>%
# as.factor() %>%
# summary() #%>%
#all(. == 1)
return (result)
}
dat[, lapply(.SD, isValid)]
isValid <- function(x) {
splitted <- strsplit(x, split = "+\\s")
result <- lapply(splitted, function(y) {
all(summary(as.factor(y)) == 1)
})
return (result)
}
dat[, lapply(.SD, isValid)]
dat[, lapply(.SD, isValid)][,.(sum)]
dat[, lapply(.SD, isValid)][,.(sum)]
sum(1:10)
dat[, lapply(.SD, isValid)][,.(sum = sum)]
dat[, lapply(.SD, isValid)]
dat[, lapply(.SD, isValid)][,.(sum = sum(V1))]
dat[, lapply(.SD, isValid)][,.(sum(V1))]
dat[, lapply(.SD, isValid)][,sum(V1)]
dat[, lapply(.SD, isValid)]
dat[, lapply(.SD, isValid)][sum(V1)]
dat[, lapply(.SD, isValid)]
colnames(dat[, lapply(.SD, isValid)])
dat[, isValid := lapply(.SD, isValid)]
dat
## --- Day 4: High-Entropy Passphrases ---
library(testthat)
library(data.table)
library(dplyr)
dat <- fread("../resources/day4input.txt", header = FALSE, sep = "\n")
isValid <- function(x) {
splitted <- strsplit(x, split = "+\\s")
result <- lapply(splitted, function(y) {
all(summary(as.factor(y)) == 1)
})
return (result)
}
dat[, isValid := lapply(.SD, isValid)][,.(sum(isValid)]
dat[, isValid := lapply(.SD, isValid)]
dat
dat[,.(sum(isValid))]
dat[,.(summe = sum(isValid))]
dat[,(summe = sum(isValid)]
dat[,.(summe = sum(isValid))]
dat[,.(summe = sum(as.Integer(isValid)))]
dat[,.(summe = sum(as.integer(isValid)))]
dat[, isValid := lapply(.SD, isValid)][,.(sum(as.integer(isValid))]
dat[, isValid := lapply(.SD, isValid)]
## --- Day 4: High-Entropy Passphrases ---
library(testthat)
library(data.table)
library(dplyr)
dat <- fread("../resources/day4input.txt", header = FALSE, sep = "\n")
isValid <- function(x) {
splitted <- strsplit(x, split = "+\\s")
result <- lapply(splitted, function(y) {
all(summary(as.factor(y)) == 1)
})
return (result)
}
dat[, isValid := lapply(.SD, isValid)]
dat
dat[,.(sum(as.integer(isValid)))]
dat[,.(sum(as.integer(isValid)))]$V1
expect_equal(dat[,.(sum(as.integer(isValid)))]$V1, 2)
expect_equal(dat[,.(sum(as.integer(isValid)))]$V1, 1)
expect_equal(dat[,.(sum(as.integer(isValid)))]$V1, 2)
dat <- fread("../resources/day4inputSample.txt", header = FALSE, sep = "\n")
isValid <- function(x) {
splitted <- strsplit(x, split = "+\\s")
result <- lapply(splitted, function(y) {
all(summary(as.factor(y)) == 1)
})
return (result)
}
dat[, isValid := lapply(.SD, isValid)]
validPassPhrases <- dat[,.(sum(as.integer(isValid)))]$V1
## we expect two valid passphrases
expect_equal(validPassPhrases, 2)
dat <- fread("../resources/day4inputSample.txt", header = FALSE, sep = "\n")
isValid <- function(x) {
splitted <- strsplit(x, split = "+\\s")
result <- lapply(splitted, function(y) {
all(summary(as.factor(y)) == 1)
})
return (result)
}
dat[, isValid := lapply(.SD, isValid)]
validPassPhrases <- dat[,.(sum(as.integer(isValid)))]$V1
## we expect two valid passphrases
expect_equal(validPassPhrases, 2)
dat <- fread("../resources/day4input.txt", header = FALSE, sep = "\n")
dat
dat[, isValid := lapply(.SD, isValid)]
validPassPhrases <- dat[,.(sum(as.integer(isValid)))]$V1
validPassPhrases
